Мотивация
    Такие приложения, как графические редакторы и редакторы электрических схем
, позволяют пользователям строить сложные диаграммы из более простых компонентов.
Проектировщик может сгруппировать мелкие компоненты для формирования более крупных, которые
в свою очередь, могут стать основой для создания еще более крупных. В простой реализации
 допустимо было бы определить классы графических примитивов, например текста и линий,
 а также классы, выступающие в роли контейнеров для этих примитивов.
Но у такого решения есть существенный недостаток. Программа, в которой эти классы используются,
должна по-разному обращаться с примитивами и контейнерами, хотя пользователь чаще всего работает с ними единообразно.
 Необходимость различать эти объекты усложняет приложение. Приходится анализировать дополнительные флаги,
 в каждом месте применения использовать if для различения этих сущностей и т.д. Паттерн компоновщик описывает,
как можно применить рекурсивную композицию таким образом, что клиенту не придется проводить различие между
 простыми и составными объектами.
    Ключом к паттерну компоновщик является абстрактный класс, который является одновременно и примитивом, и контейнером.
     В графической системе этот класс может называться Graphic. В нем объявлены операции, специфичные для каждого вида
      графического объекта (такие как Draw) и общие для всех составных объектов, например операции для доступа
       и управления потомками.
        Подклассы Line, Rectangle и Text (см. диаграмму выше) определяют примитивные графические объекты.
         В них операция Draw реализована соответственно для рисования прямых, прямоугольников и текста. Поскольку
          у примитивных объектов нет потомков, то ни один из этих подклассов не реализует операции, относящиеся к
           управлению потомками(Add, Remove, GetChild). codelab.ru источник codelab.ru оригинал
 Класс Picture агрегирует, состоит из других более примитивных объектов Graphic. Реализованная в нем операция Draw
 вызывает одноименную функцию отрисовки для каждого потомка, а операции для работы с потомками уже не пусты.
  Поскольку интерфейс класса Picture соответствует интерфейсу Graphic, то в состав объекта Picture могут входить
   и другие такие же объекты. codelab.ru codelab.ru источник оригинал
 Ниже на диаграмме показана типичная структура составного объекта, рекурсивно скомпонованного из объектов класса.